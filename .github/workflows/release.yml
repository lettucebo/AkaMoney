name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '22.x'
  AZURE_FUNCTIONAPP_NAME: akamoney-api
  AZURE_FUNCTIONAPP_HOST: akamoney-api-egfyapdmavc6hwba.japaneast-01.azurewebsites.net
  AZURE_FUNCTIONAPP_PATH: ./src/AkaMoney.Functions
  AZURE_STATIC_WEB_APP_NAME: akamoney-admin
  FRONTEND_PATH: ./src/akamoney-frontend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: nuget-${{ runner.os }}-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          nuget-${{ runner.os }}-

    - name: Restore .NET dependencies
      run: dotnet restore ./src/AkaMoney.sln
      
    - name: Build Function App
      run: dotnet build ${{ env.AZURE_FUNCTIONAPP_PATH }} --configuration Release --no-restore

    - name: Cache Node.js modules
      uses: actions/cache@v4
      with:
        path: ${{ env.FRONTEND_PATH }}/node_modules
        key: node-${{ runner.os }}-${{ hashFiles('${{ env.FRONTEND_PATH }}/package-lock.json') }}
        restore-keys: |
          node-${{ runner.os }}-

    - name: Install Frontend dependencies
      run: npm ci
      working-directory: ${{ env.FRONTEND_PATH }}

    - name: Lint Frontend
      run: npm run lint
      working-directory: ${{ env.FRONTEND_PATH }}
      
    - name: Build Frontend
      run: npm run build
      working-directory: ${{ env.FRONTEND_PATH }}
      env:
        VUE_APP_API_URL: https://${{ env.AZURE_FUNCTIONAPP_HOST }}
        VUE_APP_REDIRECT_URL: https://${{ env.AZURE_FUNCTIONAPP_HOST }}
        VUE_APP_CLIENT_ID: ${{ secrets.VUE_APP_CLIENT_ID }}
        VUE_APP_TENANT_ID: ${{ secrets.VUE_APP_TENANT_ID }}
        VUE_APP_API_CLIENT_ID: ${{ secrets.VUE_APP_API_CLIENT_ID }}
        
    # 將原始程式碼保存為構件，以供後續部署使用
    - name: Upload Function App source
      uses: actions/upload-artifact@v4
      with:
        name: function-app-source
        path: ${{ env.AZURE_FUNCTIONAPP_PATH }}
        
    - name: Upload Frontend artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend
        path: ${{ env.FRONTEND_PATH }}/dist

  # deploy-function:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Download Function App artifact
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: function-app-source
  #       path: function-app-source
        
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v3
  #     with:
  #       dotnet-version: ${{ env.DOTNET_VERSION }}
        
  #   - name: Install Azure Functions Core Tools
  #     run: npm install -g azure-functions-core-tools@4 --unsafe-perm true
        
  #   - name: Publish Function App
  #     run: dotnet publish ./function-app-source --configuration Release --output ./publish
        
  #   - name: Azure Login
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}
        
  #   - name: Deploy Function App
  #     uses: Azure/functions-action@v1
  #     with:
  #       app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
  #       package: ./publish
  #       respect-funcignore: true
  #       publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
  deploy-frontend:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Frontend artifact
      uses: actions/download-artifact@v4
      with:
        name: frontend
        path: frontend

    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Frontend to Static Web App
      uses: Azure/static-web-apps-deploy@v1
      with:
        app_location: frontend
        output_location: ""
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        action: "upload"
        skip_app_build: true
        repo_token: ${{ secrets.GITHUB_TOKEN }}
