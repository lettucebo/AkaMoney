name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '22.x'
  AZURE_FUNCTIONAPP_NAME: akamoney-prod-api
  AZURE_FUNCTIONAPP_PATH: ./src/AkaMoney.Functions
  FRONTEND_PATH: ./src/akamoney-frontend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Restore .NET dependencies
      run: dotnet restore ./src/AkaMoney.sln

    - name: Build .NET projects
      run: dotnet build ./src/AkaMoney.sln --configuration Release --no-restore

    - name: Install Frontend dependencies
      run: npm ci
      working-directory: ${{ env.FRONTEND_PATH }}

    - name: Lint Frontend
      run: npm run lint
      working-directory: ${{ env.FRONTEND_PATH }}
      
    - name: Build Frontend
      run: npm run build
      working-directory: ${{ env.FRONTEND_PATH }}
      env:
        VUE_APP_API_URL: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net
        VUE_APP_REDIRECT_URL: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net
  # deploy-function:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v3
  #     with:
  #       dotnet-version: ${{ env.DOTNET_VERSION }}
        
  #   - name: Restore dependencies
  #     run: dotnet restore ${{ env.AZURE_FUNCTIONAPP_PATH }}
      
  #   - name: Publish Function App
  #     run: dotnet publish ${{ env.AZURE_FUNCTIONAPP_PATH }} --configuration Release --output ${{ env.AZURE_FUNCTIONAPP_PATH }}/bin/Release/net8.0/publish

  #   - name: Azure Login
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}    # 部署整合的 Function App
  #   - name: Build and deploy Function App
  #     uses: Azure/functions-action@v1
  #     with:
  #       app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
  #       package: ${{ env.AZURE_FUNCTIONAPP_PATH }}/bin/Release/net8.0/publish
  #       respect-funcignore: true
  #       publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

  deploy-frontend:
    needs: deploy-function
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install Frontend dependencies
      run: npm ci
      working-directory: ${{ env.FRONTEND_PATH }}

    - name: Build Frontend
      run: npm run build
      working-directory: ${{ env.FRONTEND_PATH }}
      env:
        VUE_APP_API_URL: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net
        VUE_APP_REDIRECT_URL: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net
        VUE_APP_CLIENT_ID: ${{ secrets.VUE_APP_CLIENT_ID }}
        VUE_APP_TENANT_ID: ${{ secrets.VUE_APP_TENANT_ID }}
        VUE_APP_API_CLIENT_ID: ${{ secrets.VUE_APP_API_CLIENT_ID }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Frontend to Static Web App
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.STATIC_WEB_APP_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "${{ env.FRONTEND_PATH }}/dist"
        skip_app_build: true
